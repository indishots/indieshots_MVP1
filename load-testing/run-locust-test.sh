#!/bin/bash

echo "üöÄ Starting Locust Load Test for Image Generation API"
echo "=================================================="

cd "$(dirname "$0")"

# Check if locust is available
if ! command -v locust &> /dev/null; then
    echo "‚ùå Locust not found. Installing..."
    pip install locust
fi

echo "üìä Test Configuration:"
echo "   ‚Ä¢ Target: https://indieshots.replit.app"
echo "   ‚Ä¢ Focus: Image generation APIs"
echo "   ‚Ä¢ Authentication: premium@demo.com"
echo ""

# Default parameters
USERS=${1:-10}
SPAWN_RATE=${2:-2}
DURATION=${3:-60}

echo "üéØ Running headless test with:"
echo "   ‚Ä¢ Users: $USERS"
echo "   ‚Ä¢ Spawn rate: $SPAWN_RATE users/second"
echo "   ‚Ä¢ Duration: ${DURATION}s"
echo ""

# Create results directory
mkdir -p results

# Get timestamp
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")

echo "‚ñ∂Ô∏è  Starting load test..."

# Run Locust in headless mode
locust -f locustfile.py \
    --headless \
    --users $USERS \
    --spawn-rate $SPAWN_RATE \
    --run-time ${DURATION}s \
    --host=https://indieshots.replit.app \
    --html "results/locust-report-${USERS}users-${TIMESTAMP}.html" \
    --csv "results/locust-data-${USERS}users-${TIMESTAMP}"

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ Load test completed successfully!"
    echo "üìÑ Results saved to:"
    echo "   ‚Ä¢ HTML Report: results/locust-report-${USERS}users-${TIMESTAMP}.html"
    echo "   ‚Ä¢ CSV Data: results/locust-data-${USERS}users-${TIMESTAMP}*.csv"
    echo ""
    echo "üîç Key metrics to check:"
    echo "   ‚Ä¢ Response times for image generation"
    echo "   ‚Ä¢ Success rate (should be >95%)"
    echo "   ‚Ä¢ OpenAI API rate limit errors (503s)"
    echo "   ‚Ä¢ Authentication success rate"
else
    echo "‚ùå Load test failed. Check the error messages above."
fi